@page "/optimization"

@using NonConvexWebsite.Data

<h1>Optimization</h1>

<p>
    
    Wir bieten Ihnen unsere Erfahrung in Erstellung diverser Business - Applikationen, die Sie bei der Steuerung Ihrer Geschäfte unterstützen. Dies angefangen mit Integration externer Datenquellen (z.B. Broker Quotes, Reuters usw.), über Integriertes Reporting und Analyse (z.B. mittels SSRS oder die Erstellung von Excel - Dokumenten via Interop) und bis hin zum Formulieren von Optimierungsproblemen als MILP (Mixed Integer Linear Program) zur Lösung mittels eines Simplex Solvers. 

</p>

<img src="PriceDevelopmentReport.png" width="600" height="590" />

@*@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}*@
